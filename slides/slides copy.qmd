---
title: "<span style='color: white;font-size: 0.7em;'>Data Visualization</span>"
subtitle: "<span style='color: white;'>Behavioral Data Science Toolbox 2025</span>"
author: "<span style='color: white;'>Lecturers: Annie Johansson and Lilian Ye</span>"
#footer: "<span style='color: white;'>Cover photo made in R by <a href='https://art.djnavarro.net' style='color: pink; text-decoration: underline;'>Danielle Navarro</a></span>"
format: 
  revealjs:
    highlight-style: arrow
    include-navbar: true
    logo: images/uva_logo.png
    preview-links: false
    progress: true
    slide-number: true
    show-slide-number: print
    smaller: false
    touch: true
editor: visual
title-slide-attributes:
  data-background-image: "images/coverphoto.jpg"
  data-background-size: auto
---

# Better plots ü•á {background-color="#8000FF"}

## Tuesday, Oct 7

-  Feedback on assignment 1
-  Recap: what makes a good DV?
-  More data visualization features 
-  Work on assignment 2

## Tips from Assignment 1


## One dataset, many visualizations

::::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("gt")
data("pizzaplace")
pizza_top <- pizzaplace %>%
  dplyr::mutate(size = factor(size, levels = c("S", "M", "L"))) %>%
  dplyr::count(name, type, size, price, sort = TRUE) %>%
  dplyr::top_n(n = 5)
pizza_top %>%
  gt::gt() %>%
  gt::tab_header(title = "Pizza Top 5", subtitle = "2015") %>%
  gt::fmt_currency(columns = price, currency = "USD") %>%
  gt::tab_source_note(source_note = gt::md("Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)")) %>%
  gt::opt_stylize(style = 6)
```
:::

::: {.column width="50%"}
```{r warning=FALSE}
#| echo: true
#| code-fold: true
library("ggplot2")
pizza_top %>%
  ggplot2::ggplot(aes(x = reorder(name, n, decreasing = TRUE), y = n)) +
  ggplot2::geom_point(aes(color = type, size = size)) +
  ggplot2::geom_text(aes(label = price), nudge_y = -30) +
  ggplot2::labs(title = "Pizza Top 5", subtitle = "2015", x = "name") 
```
:::
:::::

## One dataset, many visualizations

::::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
library("gt")
pizza_season <- pizzaplace %>%
  dplyr::mutate(month = lubridate::month(date, label = TRUE)) %>%
  dplyr::group_by(month) %>%
  dplyr::count(type)
pizza_season %>%
  tidyr::pivot_wider(names_from = month, values_from = n) %>%
  gt::gt() %>%
  gt::tab_header(title = "Pizza Season", subtitle = "2015") %>%
  gt::tab_source_note(source_note = gt::md("Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)")) %>%
  gt::opt_stylize(style = 6)
```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
#| fig.height: 5
#| fig.show: "hold"
library("ggplot2")
library("lubridate")
fig_season_1 <- pizza_season %>%
  ggplot2::ggplot(aes(x = month, y = n, group = type)) +
  ggplot2::geom_line(aes(linetype = type)) +
  ggplot2::labs(title = "Pizza Season", subtitle = "2015")
fig_season_1

fig_season_2 <- pizza_season %>%
  ggplot2::ggplot(aes(x = month, y = n, group = type)) +
  ggplot2::geom_bar(aes(fill = type), stat = "identity", position = "dodge") +
  ggplot2::labs(title = "Pizza Season", subtitle = "2015")
fig_season_2
```
:::
:::::


## [from data to viz](https://www.data-to-viz.com/)

![](images/data-to-viz.png){fig.height="600"}

## [from data to viz](https://www.data-to-viz.com/)

![](images/data-to-viz-caveats.png){fig.height="600"}

## Recap

::::: columns
::: {.column width="40%"}
‚úì Keep it simple.

‚úì Don't mislead.

‚úì Tell one story.

‚úì **First impressions matter!**
:::

::: {.column width="60%"}
![](images/misleading.jpeg){fig-align="center"}
:::
:::::

## More data visualization features

-  Chart junk
-  Themes
-  Colors
-  Color blindness
-  Captions
-  Typography
-  File format/size
-  Font embedding

## Chart junk
```{r}
library(dplyr)
library(ggplot2)

# aggregate to totals
pizza_totals <- pizza_season %>%
  group_by(type) %>%
  summarise(total = sum(n), .groups = "drop") %>%
  mutate(n_icons = round(total / 1000))  # 1 pizza = 100 sales

# expand data: one row per pizza icon
pizza_iso <- pizza_totals %>%
  rowwise() %>%
  mutate(icon_id = list(1:n_icons)) %>%
  tidyr::unnest(icon_id) %>%
  mutate(highlight = ifelse(type == "classic", TRUE, FALSE))

pizza_totals <- pizza_totals %>%
  mutate(highlight = ifelse(type == "classic", TRUE, FALSE))

# plot with üçï
fig_pizza_iso <- ggplot(pizza_iso, aes(x = icon_id, y = type)) +
  ggimage::geom_image(aes(image = "images/pizza.png"), size = 0.2) +
  geom_rect(
    data = pizza_totals,
    aes(xmin = total/1000, xmax = total/1000 + 2, 
        ymin = as.numeric(factor(type)) - 0.5, 
        ymax = as.numeric(factor(type)) + 0.5),
    inherit.aes = FALSE,
    fill = "white"
  ) +
  labs(
    title = "Total Pizza Sales in 2015",
    x = "Sales (Scale 1:1000)",
    y = NULL
  ) +
  theme_minimal(base_size = 14) +
  theme(
    panel.grid = element_blank(),
    axis.ticks = element_blank()
  )

fig_pizza_iso
```

##

```{r}
#| echo: true
#| code-fold: true
library("showtext")
sysfonts::font_add_google("Lobster")
sysfonts::font_add_google("Lexend")
showtext::showtext_auto()
# fig_pizza_iso +
#   ggplot2::theme(plot.title = element_text(family = "Lobster", size = 20),
#                  axis.title.x = element_text(family = "Lobster", size = 16),
#                  axis.text.y = element_text(family = "Lobster", size = 16))

# pizza_iso <- pizza_totals %>%
#   rowwise() %>%
#   mutate(icon_id = list(1:n_icons)) %>%
#   tidyr::unnest(icon_id) %>%
#   mutate(highlight = ifelse(type == "classic", TRUE, FALSE))

fig_pizza_iso +
  geom_rect(
    data = pizza_totals,
    aes(xmin = 0, xmax = total/1000, 
        ymin = as.numeric(factor(type)) - 0.5, 
        ymax = as.numeric(factor(type)) + 0.5,
        alpha = highlight),
    inherit.aes = FALSE,
    fill = "white"
  ) +
  scale_alpha_manual(values = c("TRUE" = 0, "FALSE" = 0.3), guide = "none") +
  labs(title = "The classic is a classic for a reason.",
       subtitle = "Total Pizza Sales in 2015",
       caption = "Source: pizzaplace dataset") +
  ggplot2::theme(text = element_text(family = "Lexend", color = "gray30"),
                 plot.title = element_text(family = "Lobster", size = 20, color = "tomato3"),
                 plot.subtitle = element_text(family = "Lexend", size = 16), 
                 axis.title.x = element_text(family = "Lobster", size = 16),
                 axis.text.y = element_text(family = "Lobster", size = 16, color = "tomato3"))
```

