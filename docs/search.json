[
  {
    "objectID": "slides/slides.html#section-1",
    "href": "slides/slides.html#section-1",
    "title": "Data Visualization",
    "section": "",
    "text": "Slides made using quartoCover photo made in R by Danielle Navarro"
  },
  {
    "objectID": "slides/slides.html#section-2",
    "href": "slides/slides.html#section-2",
    "title": "Data Visualization",
    "section": "üìå",
    "text": "üìå\ndata-visualization-2025"
  },
  {
    "objectID": "slides/slides.html#tuesday-sept-30",
    "href": "slides/slides.html#tuesday-sept-30",
    "title": "Data Visualization",
    "section": "Tuesday, Sept 30",
    "text": "Tuesday, Sept 30\n\nWhy visualize data?\nWhat makes a plot good (and bad)?\nGuiding principles\nData Visualization Project"
  },
  {
    "objectID": "slides/slides.html#section-3",
    "href": "slides/slides.html#section-3",
    "title": "Data Visualization",
    "section": "üí¨",
    "text": "üí¨\nWhy visualize data?"
  },
  {
    "objectID": "slides/slides.html#why-visualize-data-2",
    "href": "slides/slides.html#why-visualize-data-2",
    "title": "Data Visualization",
    "section": "Why visualize data?",
    "text": "Why visualize data?"
  },
  {
    "objectID": "slides/slides.html#why-visualize-data-3",
    "href": "slides/slides.html#why-visualize-data-3",
    "title": "Data Visualization",
    "section": "Why visualize data?",
    "text": "Why visualize data?"
  },
  {
    "objectID": "slides/slides.html#anscombes-quartet",
    "href": "slides/slides.html#anscombes-quartet",
    "title": "Data Visualization",
    "section": "Anscombe‚Äôs quartet",
    "text": "Anscombe‚Äôs quartet\n\n\n \n\n\n\nCode\nlibrary(\"datasauRus\")\nlibrary(scales)\n\ndatasaurus_dozen %&gt;% \n  ggplot2::ggplot(aes(x = x, y = y, color = dataset)) +\n  ggplot2::geom_point() +\n  ggplot2::theme_void() +\n  ggplot2::geom_smooth(method = \"lm\", color = \"gray\", fill = \"gray\", alpha = .5) +\n  ggplot2::theme(legend.position = \"none\", text = element_text(size = 30)) +\n  ggplot2::facet_wrap(~dataset, ncol = 4)\n\n\n\n\n\n\n\n\n\n\n\nPackages: datasauRus, anscombiser.\nMore information: Same Stats, Different Graphs, socviz.co."
  },
  {
    "objectID": "slides/slides.html#section-4",
    "href": "slides/slides.html#section-4",
    "title": "Data Visualization",
    "section": "üí¨",
    "text": "üí¨\nWhat is more important? An eye or an algorithm?\nWhat are the consequences of overrelying on statistical techniques? What are the consequences of overrelying on visualizations?"
  },
  {
    "objectID": "slides/slides.html#what-makes-a-bad-plot-bad",
    "href": "slides/slides.html#what-makes-a-bad-plot-bad",
    "title": "Data Visualization",
    "section": "What makes a bad plot bad?",
    "text": "What makes a bad plot bad?\n\n\n\nAesthetic (ugly)\nPerceptual (bad)\nSubstantive (wrong)\n\n\n\n\n\nClaus Wilke - Ugly, bad, and wrong figures"
  },
  {
    "objectID": "slides/slides.html#speed-dates",
    "href": "slides/slides.html#speed-dates",
    "title": "Data Visualization",
    "section": "üí¨ Speed dates",
    "text": "üí¨ Speed dates\n\n\n\nWhat do you think about this plot?\nWhat elements can be improved?\nAre the problems aesthetic, perceptual, or substantive?"
  },
  {
    "objectID": "slides/slides.html#exploratory-versus-explanatory",
    "href": "slides/slides.html#exploratory-versus-explanatory",
    "title": "Data Visualization",
    "section": "Exploratory versus explanatory",
    "text": "Exploratory versus explanatory\n\nExploratory in the sense of data exploration. Exploratory in the sense of visualization exploration (as in previous example, where the same data can be plotted in several ways). In both cases, you can create ugly plots.\nWe focus on explanatory data viz (also bridge to next). Beautiful plots!\n\n\n\n\n\n\n\n\n\n\nSource: Natalia Kiseleva\n\n\n\n\n\n\n\n\n\n\nSource: Scott McCloud\n\n\n\nExploratory: examine the structure of your data.\nExplanatory: tell a story with your data.\n\n\n\nMore resources: clauswilke.com (telling a story and making a point), susielu.com (different interpretation of exploratory/explanatory)."
  },
  {
    "objectID": "slides/slides.html#exploratory-versus-explanatory-1",
    "href": "slides/slides.html#exploratory-versus-explanatory-1",
    "title": "Data Visualization",
    "section": "Exploratory versus explanatory",
    "text": "Exploratory versus explanatory\n\n\n\n\n\n\nSource: storytellingwithdata.com\n\nMore resources: clauswilke.com (telling a story and making a point), susielu.com (different interpretation of exploratory/explanatory)."
  },
  {
    "objectID": "slides/slides.html#some-good-examples",
    "href": "slides/slides.html#some-good-examples",
    "title": "Data Visualization",
    "section": "Some good examples",
    "text": "Some good examples\n Distributions are informative\n\n\n\n\n\n\nNYT Graphic - Obamacare spending\nHow to reproduce a NYT graphic"
  },
  {
    "objectID": "slides/slides.html#tips-for-the-best-viz",
    "href": "slides/slides.html#tips-for-the-best-viz",
    "title": "Data Visualization",
    "section": "Tips for the best viz",
    "text": "Tips for the best viz\n\nIs it explaining data?\nIs the information complete and correct?\nAre axes correct? (+ Should they have a zero-point?)\nDo the colors work? ( + Do they map to a relevant attribute?)\nAre all elements needed?\nWhat is the data to ink ratio?\nIs it understandable & simple?\nDoes it portray one conclusion?"
  },
  {
    "objectID": "slides/slides.html#break",
    "href": "slides/slides.html#break",
    "title": "Data Visualization",
    "section": "Break",
    "text": "Break\n\n\nCode\nlibrary(\"RXKCD\")\nRXKCD::getXKCD(which = \"833\")"
  },
  {
    "objectID": "slides/slides.html#aims",
    "href": "slides/slides.html#aims",
    "title": "Data Visualization",
    "section": "Aims",
    "text": "Aims\nYour goal is to go from exploring the Prowise data to telling a story with it.\n\nAssignment 1: Choose a research question. Explore the data and create a set of visualizations to help you understand the data.\nAssignment 2: Create a final data visualization that tells a story with the data. Compiled into a html document, and presented in a GitHub repository."
  },
  {
    "objectID": "slides/slides.html#requirements-assignment-2",
    "href": "slides/slides.html#requirements-assignment-2",
    "title": "Data Visualization",
    "section": "Requirements Assignment 2",
    "text": "Requirements Assignment 2\n\nUse R Markdown (or Quarto) to create your visualizations.\nThe markdown document should be in the style of a report: explain your research question, and how you came to your conclusion. Not more than 1000 words.\n\nInclude an exploratory graph, and explain how it helped you understand the data.\nOnly your final, explanatory graph, will be graded. Clearly mark which graph this is."
  },
  {
    "objectID": "slides/slides.html#workflow",
    "href": "slides/slides.html#workflow",
    "title": "Data Visualization",
    "section": "Workflow",
    "text": "Workflow\n\nComment your code clearly. We want to understand your thought process.\nCollaborate within your group using Git & GitHub. You will set up your own project repository connected to the Data Visualization Server.\nMake sure all documents render correctly, and that code is styled and runs.\nÔ∏è‚ö† Do not push any data to GitHub."
  },
  {
    "objectID": "slides/slides.html#workflow-1",
    "href": "slides/slides.html#workflow-1",
    "title": "Data Visualization",
    "section": "Workflow",
    "text": "Workflow\n\nWorking on the server\nGit setup & workflow"
  },
  {
    "objectID": "slides/slides.html#first-draft-peer-review",
    "href": "slides/slides.html#first-draft-peer-review",
    "title": "Data Visualization",
    "section": "First draft & peer review",
    "text": "First draft & peer review\n\nFirst draft due Friday 10/10 12.30 ‚Äì No requirements.\nPeer review due Friday 10/10 23.59 ‚Äì Review one other group‚Äôs work. You will have time for this during Friday‚Äôs class."
  },
  {
    "objectID": "slides/slides.html#section-5",
    "href": "slides/slides.html#section-5",
    "title": "Data Visualization",
    "section": "üîó",
    "text": "üîó\nChoose RQ"
  },
  {
    "objectID": "slides/slides.html#friday-oct-3",
    "href": "slides/slides.html#friday-oct-3",
    "title": "Data Visualization",
    "section": "Friday, Oct 3",
    "text": "Friday, Oct 3\n\nInteractive visualizations with plotly\nWork on assignment 1"
  },
  {
    "objectID": "slides/slides.html#section-6",
    "href": "slides/slides.html#section-6",
    "title": "Data Visualization",
    "section": "",
    "text": "&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nSome content\n=======\nSome conflicted content\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; new_branch"
  },
  {
    "objectID": "slides/slides.html#git-conflicts",
    "href": "slides/slides.html#git-conflicts",
    "title": "Data Visualization",
    "section": "Git conflicts",
    "text": "Git conflicts\n\n\nHappens when two people change the same file, and then try to push to GitHub.\nIdentify the content that you want to keep and delete the rest\nDelete the &lt;&lt;&lt;&lt;&lt;&lt;&lt;, =======, and &gt;&gt;&gt;&gt;&gt;&gt;&gt; lines\nSave the file, add, commit, and push again\nNeed to resolve via command line?\nAvoid by always starting you work session with a git pull (and make sure you don‚Äôt have uncommitted changes)\nAlso communicate who is working on what"
  },
  {
    "objectID": "slides/slides.html#why-use-interactive-visualizations",
    "href": "slides/slides.html#why-use-interactive-visualizations",
    "title": "Data Visualization",
    "section": "üí¨ Why use interactive visualizations?",
    "text": "üí¨ Why use interactive visualizations?\n\nWhat advantages/disadvantages do interactive visualizations have over static plots?"
  },
  {
    "objectID": "slides/slides.html#advantages",
    "href": "slides/slides.html#advantages",
    "title": "Data Visualization",
    "section": "Advantages",
    "text": "Advantages\n\n\nExplore data dynamically\nZoom, pan, and hover for details\nReveal extra information without clutter\nEnhance engagement in presentations and reports\nUseful for exploratory analysis and dashboards"
  },
  {
    "objectID": "slides/slides.html#disadvantages",
    "href": "slides/slides.html#disadvantages",
    "title": "Data Visualization",
    "section": "Disadvantages",
    "text": "Disadvantages\n\n\nHarder to include in static formats (papers, print)\nAccessibility issues (screen readers, non colorblind-friendly defaults)\nCan overwhelm the audience if overused\nLarger file sizes, slower rendering\nRequires additional packages/libraries (e.g., {plotly})"
  },
  {
    "objectID": "slides/slides.html#section-7",
    "href": "slides/slides.html#section-7",
    "title": "Data Visualization",
    "section": "",
    "text": "üß† Interactivity enhances, but does not replace,\nthe fundamentals of good data visualization"
  },
  {
    "objectID": "slides/slides.html#plotly",
    "href": "slides/slides.html#plotly",
    "title": "Data Visualization",
    "section": "Plotly",
    "text": "Plotly\n\n\nFree and open-source interactive graphing library\nR users can access it via the {plotly} package: plotly.com/r"
  },
  {
    "objectID": "slides/slides.html#plotly-in-r",
    "href": "slides/slides.html#plotly-in-r",
    "title": "Data Visualization",
    "section": "Plotly in R",
    "text": "Plotly in R\n\nTwo main ways to creating a plotly object in R:\n\nConvert a ggplot2 object with ggplotly()\nDirectly initialize a plotly object with plot_ly()\n\n‚û°Ô∏è ggplotly() example with Oefenweb data"
  },
  {
    "objectID": "slides/slides.html#additional-functionalities-in-plotly",
    "href": "slides/slides.html#additional-functionalities-in-plotly",
    "title": "Data Visualization",
    "section": "Additional functionalities in Plotly",
    "text": "Additional functionalities in Plotly\n\nWith plot_ly(), you can add and control interactive elements such as:\n\nAdding custom controls\nAnimations\n\n\nSource: plotly.com/r"
  },
  {
    "objectID": "slides/slides.html#requirements-assignment-1-part-b-individual",
    "href": "slides/slides.html#requirements-assignment-1-part-b-individual",
    "title": "Data Visualization",
    "section": "Requirements Assignment 1, part B (individual)",
    "text": "Requirements Assignment 1, part B (individual)\n\nMake the static ggplot object interactive using the {plotly} package\nAdd a customized tooltip that displays additional information when you hover over the plot"
  },
  {
    "objectID": "slides/slides.html#tuesday-oct-7",
    "href": "slides/slides.html#tuesday-oct-7",
    "title": "Data Visualization",
    "section": "Tuesday, Oct 7",
    "text": "Tuesday, Oct 7\n\nFeedback on assignment 1\nRecap: what makes a good DV?\nMore data visualization features\nWork on assignment 2"
  },
  {
    "objectID": "slides/slides.html#tips-from-assignment-1",
    "href": "slides/slides.html#tips-from-assignment-1",
    "title": "Data Visualization",
    "section": "Tips from Assignment 1",
    "text": "Tips from Assignment 1"
  },
  {
    "objectID": "slides/slides.html#one-dataset-many-visualizations",
    "href": "slides/slides.html#one-dataset-many-visualizations",
    "title": "Data Visualization",
    "section": "One dataset, many visualizations",
    "text": "One dataset, many visualizations\n\n\n\n\nCode\nlibrary(\"gt\")\ndata(\"pizzaplace\")\npizza_top &lt;- pizzaplace %&gt;%\n  mutate(size = factor(size, levels = c(\"S\", \"M\", \"L\"))) %&gt;%\n  count(name, type, size, price, sort = TRUE) %&gt;%\n  top_n(n = 5)\npizza_top %&gt;%\n  gt() %&gt;%\n  tab_header(title = \"Pizza Top 5\", subtitle = \"2015\") %&gt;%\n  fmt_currency(columns = price, currency = \"USD\") %&gt;%\n  tab_source_note(source_note = md(\"Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)\")) %&gt;%\n  opt_stylize(style = 6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPizza Top 5\n\n\n2015\n\n\nname\ntype\nsize\nprice\nn\n\n\n\n\nbig_meat\nclassic\nS\n$12.00\n1914\n\n\nthai_ckn\nchicken\nL\n$20.75\n1410\n\n\nfive_cheese\nveggie\nL\n$18.50\n1409\n\n\nfour_cheese\nveggie\nL\n$17.95\n1316\n\n\nclassic_dlx\nclassic\nM\n$16.00\n1181\n\n\n\nSource: pizzaplace dataset\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(\"ggplot2\")\npizza_top %&gt;%\n  ggplot(aes(x = reorder(name, n, decreasing = TRUE), y = n)) +\n  geom_point(aes(color = type, size = size)) +\n  geom_text(aes(label = price), nudge_y = -30) +\n  labs(title = \"Pizza Top 5\", subtitle = \"2015\", x = \"name\")"
  },
  {
    "objectID": "slides/slides.html#one-dataset-many-visualizations-1",
    "href": "slides/slides.html#one-dataset-many-visualizations-1",
    "title": "Data Visualization",
    "section": "One dataset, many visualizations",
    "text": "One dataset, many visualizations\n\n\n\n\nCode\nlibrary(\"gt\")\npizza_season &lt;- pizzaplace %&gt;%\n  mutate(month = lubridate::month(date, label = TRUE)) %&gt;%\n  group_by(month) %&gt;%\n  count(type)\npizza_season %&gt;%\n  pivot_wider(names_from = month, values_from = n) %&gt;%\n  gt() %&gt;%\n  tab_header(title = \"Pizza Season\", subtitle = \"2015\") %&gt;%\n  tab_source_note(source_note = md(\"Source: [pizzaplace dataset](https://gt.rstudio.com/articles/gt-datasets.html#pizzaplace)\")) %&gt;%\n  opt_stylize(style = 6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPizza Season\n\n\n2015\n\n\ntype\nJan\nFeb\nMar\nApr\nMay\nJun\nJul\nAug\nSep\nOct\nNov\nDec\n\n\n\n\nchicken\n913\n875\n994\n924\n939\n910\n963\n934\n900\n832\n981\n885\n\n\nclassic\n1257\n1178\n1236\n1253\n1324\n1199\n1331\n1283\n1202\n1181\n1262\n1182\n\n\nsupreme\n1044\n964\n991\n1013\n1045\n1040\n1041\n991\n877\n998\n1050\n933\n\n\nveggie\n1018\n944\n1040\n961\n1020\n958\n1057\n960\n911\n872\n973\n935\n\n\n\nSource: pizzaplace dataset\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(\"ggplot2\")\nlibrary(\"lubridate\")\nfig_season_1 &lt;- pizza_season %&gt;%\n  ggplot(aes(x = month, y = n, group = type)) +\n  geom_bar(aes(fill = type), stat = \"identity\") +\n  labs(title = \"Pizza Season\", subtitle = \"2015\", y = \"Number of pizzas sold\", x = \"Month\")\nfig_season_1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig_season_2 &lt;- pizza_season %&gt;%\n  ggplot(aes(x = month, y = n, group = type)) +\n  geom_line(aes(linetype = type)) +\n  labs(title = \"Pizza Season\", subtitle = \"2015\", y = \"Number of pizzas sold\", x = \"Month\")\nfig_season_2"
  },
  {
    "objectID": "slides/slides.html#from-data-to-viz",
    "href": "slides/slides.html#from-data-to-viz",
    "title": "Data Visualization",
    "section": "from data to viz",
    "text": "from data to viz"
  },
  {
    "objectID": "slides/slides.html#from-data-to-viz-1",
    "href": "slides/slides.html#from-data-to-viz-1",
    "title": "Data Visualization",
    "section": "from data to viz",
    "text": "from data to viz"
  },
  {
    "objectID": "slides/slides.html#recap",
    "href": "slides/slides.html#recap",
    "title": "Data Visualization",
    "section": "Recap",
    "text": "Recap\n\n\n‚úì Keep it simple.\n‚úì Don‚Äôt mislead.\n‚úì Tell one story.\n‚úì First impressions matter!"
  },
  {
    "objectID": "slides/slides.html#more-data-visualization-features",
    "href": "slides/slides.html#more-data-visualization-features",
    "title": "Data Visualization",
    "section": "More data visualization features",
    "text": "More data visualization features\n\nChart junk\nThemes\nColors\nColor blindness\nCaptions\nTypography\nFile format/size\nFont embedding"
  },
  {
    "objectID": "slides/slides.html#chart-junk",
    "href": "slides/slides.html#chart-junk",
    "title": "Data Visualization",
    "section": "Chart junk",
    "text": "Chart junk\n\n\n\n\n\n\n\n\n\n\n\n\n\nNYT\n\n\n\n\n\n\n\n\n\n\n\nClaus Wilke\n\n\n\n\n\n\n\n\n\n\n\nNYT"
  },
  {
    "objectID": "slides/slides.html#themes",
    "href": "slides/slides.html#themes",
    "title": "Data Visualization",
    "section": "Themes",
    "text": "Themes\n\n\n\n\nCode\nlibrary(\"cowplot\")\nfig_season_2 +\n  theme_cowplot()\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nmy_theme &lt;- theme_cowplot() +\n  theme(\n    panel.grid.major = element_line(color = \"gray90\"),\n    axis.ticks = element_line(color = \"gray20\"),\n    axis.text = element_text(color = \"gray20\", face = \"italic\", size = 16),\n    axis.title = element_text(color = \"gray20\", face = \"bold\", size = 16),\n    plot.title = element_text(hjust = 0.5, size = 20, face = \"bold\"),\n    plot.subtitle = element_text(hjust = 0.5, size = 18),\n    legend.position = \"top\",\n    legend.title = element_text(size = 16, face = \"bold\"),\n    legend.text = element_text(size = 16)\n  )\nfig_season_2 + my_theme"
  },
  {
    "objectID": "slides/slides.html#facets",
    "href": "slides/slides.html#facets",
    "title": "Data Visualization",
    "section": "Facets",
    "text": "Facets\n\ntheme_cowplot and theme_bw() format facets nicely.\nChange facet format manually with theme(strip.text = element_text(...)) and theme(strip.background = element_rect(...)).\n\n\n\n\n\nCode\nfig_season_2 +\n  facet_wrap(~type) +\n  theme_bw(12) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nfig_season_2 +\n  geom_line(linetype = \"solid\", color = \"gray30\", linewidth = 0.5) +\n  facet_wrap(~type) +\n  theme_minimal(12) +\n  theme(legend.position = \"none\",\n        strip.text = element_text(face = \"bold\", color = \"plum4\"),\n        strip.background = element_rect(fill = \"thistle2\", color = NA)) # fill for background; color for border"
  },
  {
    "objectID": "slides/slides.html#colors",
    "href": "slides/slides.html#colors",
    "title": "Data Visualization",
    "section": "Colors",
    "text": "Colors\n\n\nCode\nfig_quarter &lt;- pizza_season %&gt;%\n  mutate(quarter = case_when(\n    month %in% c(\"Jan\", \"Feb\", \"Mar\") ~ \"Q1\",\n    month %in% c(\"Apr\", \"May\", \"Jun\") ~ \"Q2\",\n    month %in% c(\"Jul\", \"Aug\", \"Sep\") ~ \"Q3\",\n    month %in% c(\"Oct\", \"Nov\", \"Dec\") ~ \"Q4\"\n  )) %&gt;%\n  ggplot(aes(x = quarter, y = n, group = type)) +\n  geom_bar(aes(fill = type), stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Pizza Season\", subtitle = \"2015, split by quarter\", y = \"Number of pizzas sold\", x = \"\")\n\nfig_quarter +\n  scale_fill_viridis_d()"
  },
  {
    "objectID": "slides/slides.html#color-scales",
    "href": "slides/slides.html#color-scales",
    "title": "Data Visualization",
    "section": "Color scales",
    "text": "Color scales\n\n\n\n\nCode\nfig_quarter +\n  labs(subtitle = \"Qualitatitive Color Scale\") +\n  scale_fill_brewer(type = \"qual\")\n\n\n\n\n\n\n\n\n\nqualitative\n(categorical data)\n\n\n\nCode\nfig_quarter +\n  labs(subtitle = \"Sequential Color Scale\") +\n  scale_fill_brewer(type = \"seq\")\n\n\n\n\n\n\n\n\n\nsequential\n(ordered data that progress from low to high)\n\n\n\nCode\nfig_quarter +\n  labs(subtitle = \"Diverging Color Scale\") +\n  scale_fill_brewer(type = \"div\")\n\n\n\n\n\n\n\n\n\ndiverging\n(ordered data that progress from low to high with a critical midpoint, e.g., 0)"
  },
  {
    "objectID": "slides/slides.html#color-blindness",
    "href": "slides/slides.html#color-blindness",
    "title": "Data Visualization",
    "section": "Color blindness",
    "text": "Color blindness\n\n\nCode\n# remotes::install_github(\"clauswilke/colorblindr\")\nlibrary(\"colorblindr\")\ncolorblindr::cvd_grid(fig_quarter)\n\n\n\n\n\n\n\n\n\nThe package MetBrewer has many colorblind-friendly palettes:\n\n\n\n\nCode\nlibrary(\"MetBrewer\")\nMetBrewer::colorblind_palettes\n\n\n [1] \"Archambault\" \"Cassatt1\"    \"Cassatt2\"    \"Demuth\"      \"Derain\"     \n [6] \"Egypt\"       \"Greek\"       \"Hiroshige\"   \"Hokusai2\"    \"Hokusai3\"   \n[11] \"Ingres\"      \"Isfahan1\"    \"Isfahan2\"    \"Java\"        \"Johnson\"    \n[16] \"Kandinsky\"   \"Morgenstern\" \"OKeeffe1\"    \"OKeeffe2\"    \"Pillement\"  \n[21] \"Tam\"         \"Troy\"        \"VanGogh3\"    \"Veronese\"   \n\n\n\n\n\nCode\nfig_quarter +scale_fill_manual(values = MetBrewer::met.brewer(\"VanGogh3\", n = 4))\n\n\n\n\n\n\n\n\n\n\n\nPackages: khroma (discrete data), viridis (continuous data), MetBrewer & rijkspalette, colorblindr, colorspace.\nResources: clauswilke.com, hclwizard.org, viridis Color Maps for R."
  },
  {
    "objectID": "slides/slides.html#color-accuracy",
    "href": "slides/slides.html#color-accuracy",
    "title": "Data Visualization",
    "section": "Color accuracy",
    "text": "Color accuracy\n\n\nPrint-proof, monitor/beamer-proof, colorblind-proof?\n\nUse grayscale (but color-coding is superior)\nUse a secondary aesthetic for color\nUse a viridis color map\n\n\n\n\n\n\n\n\nSource: benq.com\n\n\n\n\n\n\n\n\n\n\nSource: Savi et al.¬†(2018)"
  },
  {
    "objectID": "slides/slides.html#captions",
    "href": "slides/slides.html#captions",
    "title": "Data Visualization",
    "section": "Captions",
    "text": "Captions\nTitle Descriptive or declarative\nMethods Keep it brief\nResults If not (fully captured) in title\nDefinitions Colors, line types, error bars, etc.\nData source If external\n\n\n\n\n\n\n\nSource: sketch.es\n\n\n\nResources: clauswilke.com, more, more, more."
  },
  {
    "objectID": "slides/slides.html#typography",
    "href": "slides/slides.html#typography",
    "title": "Data Visualization",
    "section": "Typography",
    "text": "Typography\n\n\n\nLearn everything about typography.\nFind inspiration and recommendations.\nChoose a font for data visualizations.\nPick good font combinations.\nOr just use arial or helvetica.\n\n\n\nChange fonts with package showtext and function font_add_google(). Browse Google Fonts\n\n\nCode\nlibrary(\"showtext\")\nsysfonts::font_add_google(\"Lekton\")\nshowtext::showtext_auto()\n\nfig_season_2 +\n  theme_cowplot() +\n  theme(text = element_text(family = \"Lekton\", size = 20))"
  },
  {
    "objectID": "slides/slides.html#file-formatsize",
    "href": "slides/slides.html#file-formatsize",
    "title": "Data Visualization",
    "section": "File format/size",
    "text": "File format/size\n\n\n\nFile size: email attachment, webpage/image load time, compilation time\nFile format: resizing vector vs.¬†bitmap/raster. For bitmap images, set the plot resolution: dpi = c(‚Äúretina‚Äù, ‚Äúprint‚Äù, ‚Äúscreen‚Äù)\n\n\nggplot2::ggsave(\"awesome_plot.png\",\n                width = 5,\n                height = 5,\n                units = \"cm\",\n                dpi = \"retina\")\n\n\n\n\n\n\n\n\n\nSource: clauswilke.com\n\n\n\n\nEnlarge bitmap with AI (paid). Yes, you can save to .tex."
  },
  {
    "objectID": "slides/slides.html#font-embedding",
    "href": "slides/slides.html#font-embedding",
    "title": "Data Visualization",
    "section": "Font embedding",
    "text": "Font embedding\nVector images pick the closest font available (if the actual font is not available on the recipients computer). You can embed fonts into the vector image.\n\nshowtext converts characters into polygons. Embedding is no longer required, but text is no longer searchable.\nextrafont supports font embedding, but supports fewer fonts.\n\nAdobe Acrobat (paid version) can be used to manually embed fonts in a PDF.\n\nPackages: showtext, extrafont.\nShould color profiles also be embedded? Not sure, and not clear how R/ggplot2 handles this."
  },
  {
    "objectID": "slides/slides.html#continue-learning",
    "href": "slides/slides.html#continue-learning",
    "title": "Data Visualization",
    "section": "Continue learning",
    "text": "Continue learning\n\n\nViz types and examples: From Data to Viz, The R Graph Gallery, clauswilke.com\nExtensions: ggplot2 Extensions Gallery\nBooks: Fundamentals of Data Visualization\nNYT: What‚Äôs going on in this graph?\nData: Statistics Netherlands or data()\n\n\n\n\n\n\n\n\nRTFM: ggplot2 Book"
  },
  {
    "objectID": "slides/slides.html#get-inspiration",
    "href": "slides/slides.html#get-inspiration",
    "title": "Data Visualization",
    "section": "Get inspiration",
    "text": "Get inspiration\n\n\nPodcasts: Data Stories, Explore Explain, Data Viz Today\nBlogs: FlowingData\nJournals: Nightingale\nComics: Matt-Heun Hong, Martin Telefont, Natalia Kiseleva\nGenerative art: Clause O. Wilke, Danielle Navarro, Thomas Lin Pedersen\nAwards: Information is Beautiful\nInteractive visualizations: R Psychologist\nExplorable explanations: Nicky Case, Setosa\n\n\n\n\n\n\n\n\nThomas Lin Pedersen"
  }
]